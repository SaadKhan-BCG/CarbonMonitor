name: release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Prometheus
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:prometheus"
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/carbon-plugin-prometheus:${{ env.RELEASE_VERSION }}
      - name: Build and push Grafana
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:grafana"
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/carbon-plugin-grafana:${{ env.RELEASE_VERSION }}
      - name: Build and push Exporter
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:carbon-monitor/prometheus-exporter"
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/carbon-plugin-prometheus-exporter:${{ env.RELEASE_VERSION }}
      - name: Switch to main branch to update compose
        run: |
          git config --global user.name 'Khan-Saad'
          git config --global user.email 'SaadKhan-BCG@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git checkout main
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: generate-compose.yml
          # Optional, directory where playbooks live
          directory: ./
          options: |
            --extra-vars version=${{ env.RELEASE_VERSION }}
      - name: Test playbook
        run: |
          cat compose.yml
      - name: Commit New compose file
        run: |
          git commit -am "Push updated compose file"
          git push origin main --force